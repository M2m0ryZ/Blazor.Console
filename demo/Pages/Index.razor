@page "/"
@using Blazor.CommandLine
@using Blazor.Components.CommandLine

@inject IRunningCommand RunningCommand

<h1>Hello, world!</h1>

<BlazorCommandLine @ref="console" Name="Some Demo App v1.0.0"/>

@code
{
    BlazorCommandLine console;

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        console.Commands.Add(new CommandExample("simple","Description of command"));
        console.Commands.Add(new LongCommand("lng","Description of long-running command"));

        return base.OnAfterRenderAsync(firstRender);
    }

    public class CommandExample : BaseCommand
    {
        public CommandExample(string name,string description):base(name,description)
        {
            base.AddOption("-t","Description of option -t");
            base.AddOption("-ar","Description of option -ar");

            base.UseArguments($"Some extra arguments for {name}");
        
        }

        public override string Execute(string optionArgument1,string optionArgument2,string optionArgument3,string optionArgument4,List<string> arguments)
        {
            return "This is output of a simple command";
        }
    }

    public class LongCommand : BaseCommand
    {
        public LongCommand(string name, string description):base(name,description,true)
        {
            
        }

        public override async Task<string> ExecuteAsync(string optionArgument1,string optionArgument2,string optionArgument3,string optionArgument4,List<string> arguments)
        {
            var i = 0;
            while (i < 10)
            {
                await Task.Delay(550);
                i++;
            }
            
            return "This was a long running command";
        }
    }
}